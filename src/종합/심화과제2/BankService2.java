package 종합.심화과제2;

public class BankService2 { // class start

    /*

[JAVA] 심화과제2 : BankService 아래 실행예시를 참고하여 코드를 구현하시오. *미제출
[ 클래스 개수 ] : 3개 (Account, BankController, BankService)
[ 규칙 ] BankController 에서는 입력과 출력을 하지 않습니다.
[ 계좌 최대 개수 ] : 100개
[ 실행 예시 ]
=========== KB Bank ===========
  1.계좌등록 | 2.입금 | 3.출금 | 4.잔고 | 5.계좌이체
============================
선택 > 1
--- 계좌 등록 (보내는 사람) ---
계좌번호 : 111-111
비밀번호 : 1234
[안내] 계좌 등록이 완료되었습니다.

=========== KB Bank ===========
  1.계좌등록 | 2.입금 | 3.출금 | 4.잔고 | 5.계좌이체
============================
선택 > 1
--- 계좌 등록 (받는 사람) ---
계좌번호 : 222-222
비밀번호 : 5678
[안내] 계좌 등록이 완료되었습니다.

=========== KB Bank ===========
  1.계좌등록 | 2.입금 | 3.출금 | 4.잔고 | 5.계좌이체
============================
선택 > 2
--- 입금 ---
계좌번호 : 111-111
비밀번호 : 1234
입금액 : 50000
[안내] 입금이 완료되었습니다.

=========== KB Bank ===========
  1.계좌등록 | 2.입금 | 3.출금 | 4.잔고 | 5.계좌이체
============================
선택 > 5
--- 계좌 이체 ---
보내는 분 계좌번호 : 111-111
비밀번호 : 1234
받는 분 계좌번호 : 222-222
이체할 금액 : 20000
[안내] 이체가 완료되었습니다.

=========== KB Bank ===========
  1.계좌등록 | 2.입금 | 3.출금 | 4.잔고 | 5.계좌이체
===============================
선택 > 4
--- 잔고 확인 (보내는 사람) ---
계좌번호 : 111-111
비밀번호 : 1234
[잔고] 30000원

=========== KB Bank ===========
  1.계좌등록 | 2.입금 | 3.출금 | 4.잔고 | 5.계좌이체
============================
선택 > 4
--- 잔고 확인 (받는 사람) ---
계좌번호 : 222-222
비밀번호 : 5678
[잔고] 20000원

=========== KB Bank  ===========
  1.계좌등록 | 2.입금 | 3.출금 | 4.잔고 | 5.계좌이체
=============================
--- 계좌 이체 (잔액 부족) ---
보내는 분 계좌번호 : 111-111
비밀번호 : 1234
받는 분 계좌번호 : 222-222
이체할 금액 : 40000
[경고] 잔액이 부족합니다.

=========== KB Bank  ===========
  1.계좌등록 | 2.입금 | 3.출금 | 4.잔고 | 5.계좌이체
=============================
선택 > 5
--- 계좌 이체 (비밀번호 오류) ---
보내는 분 계좌번호 : 111-111
비밀번호 : 0000
받는 분 계좌번호 : 222-222
이체할 금액 : 10000
[경고] 계좌정보가 일치하지 않습니다.


     */
} // class end
