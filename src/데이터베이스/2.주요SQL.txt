[ 데이터베이스 ] : 데이터/자료들의 집합/모임
[ 관계형데이터베이스 ] : 자료들간의 종속되는 관계 표현 가능한 데이터베이스
[ 테이블 ] : 행과 열로 이루어진 데이터의 형식 = 표
[ SQL ]
    1. 주의할 점
        1) SQL 대소문자를 구분하지 않는다.
        2) SQL 명령어 문장 끝에 세미콜론 단위로 실행한다.
    [0] 메타데이터 관리어
        1. show
            1) show databases; : DB 서버내 전체 데이터베이스 목록 조회
            2) show variables like 'datadir' :  DB서버내 LOCAL PATH 조회
            3) show tables; : 활성화 중인 데이터베이스내 모든 테이블 조회
        2. use
            1) use 데이터베이스명; : DB 서버내 지정한 데이터베이스 활성화(사용)
    [1] 데이터베이스 정의 : DDL
        1. create
            1) create database 데이터베이스명; : 지정한 데이터베이스 생성
            2) create table 테이블명(
                속성명1 타입 제약조건
                속셩명2 타입 제약조건
                )
        2. drop
            1) drop database 데이터베이스명; : 지정한 데이터베이스 삭제
            2) drop database if exists 데이터베이스명; : 만약에 지정한 데이터베이스 존재하면 삭제
            3) drop table 테이블명;
            4) drop table if exists 테이블명; : 만약에 지정한 테이블이 존재하면 삭제
    [2] 데이터베이스 조작어 : DML, 키워드/문법에 대한 대소문자 구분 없다
        1. INSERT
            1) 특정 속성에 값 대입하여 레코드 추가
                insert into 테이블명( 속성명1 , 속성명2 ) vlaues( 값1 , 값2 )
            2) 모든 속성에 값 대입하여 레코드 추가, 속성명

[ 데이터타입 ] : 테이블 내 속성들이 갖는/저장하는 자료들의 분류/타입
    1. 정수
        tinyint      : 1바이트  +-127
        smallint     : 2바이트  +-3만정도
        mediumint    : 3바이트  +-800만정도
        *int         : 4바이트  +-21억정도
        bigint       : 8바이트  +-21억이상
            - signed : 부호가 있다( 음수, 양수 )
            - unsigned : 부호가 없다 (허용범위 x2 : 음수 안쓰는 대신 허용범위 늘어남)
            ex) int unsigned : 42억까지


    2. 실수
        float        : 4바이트   소수점
        double       : 8바이트   소수점
        *decimal     : 문자타입  소수점을 문자로 처리하는 타입, 오차없음

    3. 날짜/시간
        date        : 날짜표현       2025-07-17
        time        : 시간표현       10:20:10
        datetime    : 날짜/시간표현   2025-07-17 10:20:10

    4. 문자
        char(길이)     : 문자열표현  고정길이 최대 255글자, char(5) -> "유재석" -> [유] [재] [석] [] []
        *varchar(길이) : 문자열표현  가변길이 최대 255글자, varchar(5) -> "유재석" -> [유] [재] [석] 남은건 삭제
        text          : 문자열표현 최대 6만 글자
        *longtext     : 문자열표현 최대 42억개 글자, 4GB, 대용량 ( 게시판 만들 때 )

    4. 논리
        bool  : 논리표현 true 혹은 false, = tinyint

[ 제약조건 ] : 테이블 내 속성의 제약/제한된 기능
    1. not null : 해당 속성에 null 값을 저장하지 않는다
    2. unique : 해당 속성에 중복값을 허용하지 않는다 ( 중복방지 )
    3. default 값 : 해당 속성에 값 생략시 기본값
        - default 0 : 해당 속성에 값이 생략되면 0 초기화
        - default now() : 해당 속성에 값이 생략되면 현재 날짜/시간 초기화
    4. auto_increment : (MYSQL) 해당 속성에 순서대로 자동번호 초기화한다. ( primary key와 같이 사용 )
    5. primary key : 기본/식별키(PK), 식별 가능한 고유값 필드 키
        -> 학번, 사번, 주민등록번호, 회원번호, 주문번호, 제품번호, 게시물번호, 예약번호 등등
        -> 절대적으로 중복이 없는 고유값
        특징) not null, unique 포함
        선언) constraint primary key(필드명)
    6. foreign key      : 참조/외래키(FK) , 다른 테이블의 기본키(PK)를 참조하는 키
            -> 수강신청한학번, 출근한직원사번 , 글작성자회원번호 등등
            특징) FK필드는 NULL 과 중복 이 가능하다. PK값 참조한다.
            선언) constraint foreign key( FK필드명 ) references 참조할테이블명( PK필드명 );
            주의할점)
                1. FK속성타입 과 PK속성타입 일치 한다.
                2. 관례적으로 pk속성명 과 fk속성명은 동일하게 한다.

[ 생성된 테이블 다이어그램 확인 ] : 여럿 테이블 간의 관계 확인
    #  workbench 상단메뉴 -> [database] -> [reverse engineer] -> stored conntion : local(선택) -> [next]
    # -> 비밀번호입력 [next] -> 데이터베이스 선택 -> [next] -> [finish]




















